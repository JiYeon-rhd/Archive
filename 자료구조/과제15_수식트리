#include <iostream>
using namespace std;


#define element int

class TreeNode {
public:
	element data;
	TreeNode* left, * right;

	TreeNode(element value) {
		data = value;
		left = right = NULL;
	}
	
};



element evaluate(TreeNode *node) {
	if (node->left == NULL && node->right == NULL) { //leaf node¿Ã∏È, º˝¿⁄ ≥ÎµÂ¿Ã∏È
		return node->data;
	}
	else {
		//ø¨ªÍ¿⁄ ≥ÎµÂ¿Ã∏È
		element opr1 = evaluate(node->left);
		element opr2 = evaluate(node->right);
		if (node->data == '+') return opr1 + opr2;
		else if (node->data == '-') return opr1 - opr2;
		else if (node->data == '*') return opr1 * opr2;
		else if (node->data == '/') return opr1 / opr2;
	}


}

void main() {

	//Expression Tree ±∏º∫
	//≥ÎµÂ 7∞≥ ª˝º∫(±◊∏Æ±‚)
	TreeNode* n1 = new TreeNode(9);
	TreeNode* n2 = new TreeNode(11);
	TreeNode* n3 = new TreeNode('*');
	TreeNode* n4 = new TreeNode(5);
	TreeNode* n5 = new TreeNode(6);
	TreeNode* n6 = new TreeNode('+');
	TreeNode* root = new TreeNode('+');


	//6∞≥ ∞°¡ˆ ø¨∞·«œ±‚
	n3->left = n1;
	n3->right = n2;
	n6->left = n4;
	n6->right = n5;
	root->left = n3;
	root->right = n6;;

	element result = evaluate(root);


	cout << "ºˆΩƒ∆Æ∏Æ¿« ∞™¿∫ = " << evaluate(root) << endl;

}
