#include <iostream>
using namespace std;

//Ω∫≈√¿ª ¿ÃøÎ«— »ƒ¿ß«•±‚ ∫Ø»Ø + ∞¥√º¿ÃøÎ

#define element int
const int MAX_SIZE = 1000;

class Stack {
public:

	char mystack[MAX_SIZE]; //πËø≠∑Œ ±∏«ˆ
	int top; //√ ±‚»≠

	Stack() { top = -1; }

	bool is_stack_empty() {
		return(top == -1); //«—¡Ÿ∑Œ ±∏«ˆ∞°¥… 
	}

	bool is_stack_full() {
		return(top == MAX_SIZE - 1);
	}

	void push(element data) {
		if (is_stack_full()) {
			cout << "ERROR: Stack Full" << endl;
			return;
		}
		else {
			mystack[++top] = data;
		}
	}

	char pop() {
		if (is_stack_empty()) {
			cout << "ERROR: Stack Empty" << endl;
			return -1;
		}
		else {
			return mystack[top--];
		}
	}

	void print_stack() {
		//cout << "STACK STATUS" << endl;

		for (int i = top; i >= 0; i--)
			cout << mystack[i] << endl;
	}
};

void postfix(char expr[]) {
	Stack MyStack;

	cout << "¿‘∑¬ ºˆΩƒ = " << expr << endl;
	cout << "»ƒ¿ß ºˆΩƒ = ";
	//convert to postfix *∞°¡§ º“∞˝»£∏∏, ªÁ¡˜ø¨ªÍ, ««ø¨ªÍ¿⁄¥¬ «—¿⁄∏Æ
	for (int i = 0; i < strlen(expr); i++) {
		if (expr[i]=='(') { //øﬁ¬  ∞˝»£∏È
			continue;
		}
		else if (expr[i] == '+' || expr[i] == '-'|| expr[i] == '*' || expr[i] == '/') { //ø¨¿‹ªÁ∏È
			MyStack.push(expr[i]);
		}
		else if (expr[i] == ')') { //ø¿∏•¬  ∞˝»£∏È
			cout << MyStack.pop();
		}
		else if (expr[i] == ' ') {
			continue;
		}
		else { //««ø¨ªÍ¿⁄∏È
			cout << expr[i];
		}
	}
	
	cout << endl;
}

void main() {
	char string[100];
	cout << "ºˆΩƒ¿ª ¿‘∑¬«œººø‰: ";
	cin.getline( string,100);

	postfix(string);

}
